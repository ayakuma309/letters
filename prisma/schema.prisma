// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model YouTube {
  id          Int       @id @default(autoincrement())
  videoId     String    @unique
  title       String
  url         String
  tweet       Int?
  releaseAt   DateTime
  tags        YouTubeTag[]
  bookmarks   Bookmark[]
}

model YouTubeTag {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  youTubes    YouTube[]
}

model Bookmark {
  id          String     @id @default(uuid())
  title       String
  startAt     Decimal
  youTubeId   Int
  youTube     YouTube    @relation(fields: [youTubeId], references: [id])
}

model Qiita {
  id              Int       @id @default(autoincrement())
  qiitaId         String    @unique
  title           String
  url             String
  profileImageUrl String
  tags            QiitaTag[]
}

model QiitaTag {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  qiitas     Qiita[]
}

model Book {
  id          Int       @id @default(autoincrement())
  bookId      String    @unique
  title       String
  image       String
  infoLink    String
  tags        BookTag[]
}

model BookTag {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  books       Book[]
}
